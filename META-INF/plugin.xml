<idea-plugin version="2">
  <id>org.jetbrains.osgi</id>
  <name>OSGi support</name>
  <version>2.0</version>
  <depends>org.osmorc.manifest</depends>
  <depends>org.jetbrains.idea.maven</depends>

  <project-components>
    <component>
      <implementation-class>org.osmorc.OsmorcProjectComponent</implementation-class>
    </component>
    <component>
      <implementation-class>org.osmorc.ModuleChangeHandler</implementation-class>
    </component>
  </project-components>

  <module-components>
    <component>
      <implementation-class>org.osmorc.OsmorcModuleComponent</implementation-class>
    </component>
  </module-components>

  <actions>
    <group id="osmorc.viewGeneratedManifests" class="org.osmorc.ide.actions.ViewGeneratedManifestGroup" popup="true"
           text="View Generated Manifest" description="View the manifest of a recently generated OSGi bundle"
           icon="/org/jetbrains/osmorc2/icons/osmorc2Facet.png">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </group>
  </actions>

  <extensionPoints>
    <extensionPoint name="frameworkIntegration" interface="org.osmorc.frameworkintegration.FrameworkIntegrator"/>
    <extensionPoint name="openBundleRepository" interface="org.osmorc.obrimport.OpenBundleRepository"/>
    <extensionPoint name="manifestProvider" beanClass="org.jetbrains.osgi.compiler.ManifestProviderEP">
      <with attribute="implementation" implements="org.jetbrains.osgi.compiler.ManifestProvider"/>
    </extensionPoint>
  </extensionPoints>

  <extensions defaultExtensionNs="org.jetbrains.osgi">
    <frameworkIntegration implementation="org.osmorc.frameworkintegration.impl.felix.FelixIntegrator"/>
    <frameworkIntegration implementation="org.osmorc.frameworkintegration.impl.concierge.ConciergeIntegrator"/>
    <frameworkIntegration implementation="org.osmorc.frameworkintegration.impl.equinox.EquinoxIntegrator"/>
    <frameworkIntegration implementation="org.osmorc.frameworkintegration.impl.knopflerfish.KnopflerfishIntegrator"/>

    <openBundleRepository implementation="org.osmorc.obrimport.springsource.SpringSourceOpenBundleRepository"/>

    <manifestProvider implementation="org.jetbrains.osgi.compiler.oldImpl.ManifestFileAsManifestProvider" order="first"/>
    <manifestProvider implementation="org.jetbrains.osgi.compiler.oldImpl.BndFileManifestProvider"/>
  </extensions>

  <extensions defaultExtensionNs="org.jetbrains.idea.maven">
    <!--- <importer implementation="org.osmorc.facet.maven.OsmorcFacetImporter"/> -->
  </extensions>

  <extensions defaultExtensionNs="org.osmorc.manifest">
    <headerParser key="Private-Package" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Tool" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Bnd-LastModified" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Include-Resource" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Eclipse-PlatformFilter" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Eclipse-BuddyPolicy" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Eclipse-RegisterBuddy" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Eclipse-ExtensibleAPI" implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Eclipse-GenericCapability"
                  implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Eclipse-GenericRequire" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-ManifestVersion" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-Name" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-SymbolicName" implementationClass="org.osmorc.manifest.lang.headerparser.impl.BundleSymbolicNameParser"/>
    <headerParser key="Bundle-Version" implementationClass="org.osmorc.manifest.lang.headerparser.impl.BundleVersionParser"/>
    <headerParser key="Export-Package" implementationClass="org.osmorc.manifest.lang.headerparser.impl.ExportPackageParser"/>
    <headerParser key="Import-Package" implementationClass="org.osmorc.manifest.lang.headerparser.impl.ImportPackageParser"/>
    <!--<headerParser key="Require-Bundle" implementationClass="org.osmorc.manifest.lang.headerparser.impl.RequireBundleParser"/>  -->\
    <headerParser key="Bundle-RequiredExecutionEnvironment"
                  implementationClass="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>
    <headerParser key="Fragment-Host" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-ActivationPolicy" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-Activator" implementationClass="org.osmorc.manifest.lang.headerparser.impl.BundleActivatorParser"/>
    <headerParser key="Bundle-Category" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-ClassPath" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-ContactAddress" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-Copyright" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-Description" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-DocURL" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-Localization" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-NativeCode" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-UpdateLocation" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Bundle-Vendor" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="DynamicImport-Package" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Export-Service" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Import-Service" implementationClass="org.osmorc.manifest.lang.headerparser.impl.SimpleHeaderParser"/>
    <headerParser key="Service-Component" implementationClass="org.jetbrains.osgi.manifest.headerparser.ServiceComponentHeaderParser"/>
  </extensions>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
    <applicationService serviceInterface="org.osmorc.settings.ApplicationSettings"
                        serviceImplementation="org.osmorc.settings.ApplicationSettings"/>

    <!-- Module services -->
    <moduleService serviceInterface="org.osmorc.manifest.ManifestHolder"
                   serviceImplementation="org.osmorc.manifest.impl.ModuleManifestHolderImpl"/>

    <!-- Project services -->
    <!-- Project settings and editors -->
    <projectService serviceInterface="org.osmorc.settings.ProjectSettings"
                    serviceImplementation="org.osmorc.settings.ProjectSettings"/>

    <!-- Other project services -->
    <projectService serviceInterface="org.osmorc.BundleManager"
                    serviceImplementation="org.osmorc.impl.MyBundleManager"/>

    <projectService serviceInterface="org.osmorc.frameworkintegration.FrameworkInstanceLibraryManager"
                    serviceImplementation="org.osmorc.frameworkintegration.FrameworkInstanceLibraryManager"/>

    <configurationType implementation="org.osmorc.run.OsgiConfigurationType"/>

    <project.converterProvider
        implementation="org.osmorc.frameworkintegration.impl.equinox.EquinoxRunConfigurationConverterProvider"/>

    <!---<localInspection shortName="osmorcMisspelledHeaderName" displayName="Unknown or Misspelled Header Name" groupName="OSGi"
                     enabledByDefault="true" level="WARNING" implementationClass="org.osmorc.inspection.MisspelledHeaderNameInspection"/> -->
    <localInspection shortName="osmorcUnregisteredActivator" displayName="Bundle Activator not registered" groupName="OSGi"
                     enabledByDefault="true" level="ERROR" implementationClass="org.osmorc.inspection.UnregisteredActivatorInspection"/>
    <localInspection shortName="osmorcMissingFinalNewline" displayName="Missing Final New Line" groupName="OSGi" enabledByDefault="true"
                     level="ERROR" implementationClass="org.osmorc.inspection.MissingFinalNewlineInspection"/>
    <localInspection shortName="osmorcClassInDefaultPackage" displayName="Class is in default package" groupName="OSGi"
                     enabledByDefault="true" level="ERROR" implementationClass="org.osmorc.inspection.ClassInDefaultPackageInspection"/>

    <localInspection shortName="NonOsgiMavenDependencyInspection" displayName="Non-OSGi dependency" groupName="OSGi" enabledByDefault="true"
                     level="WARNING" implementationClass="org.osmorc.inspection.maven.NonOsgiMavenDependencyInspection"/>
    <localInspection shortName="MavenArtifactIsNotImportedInspection" displayName="Artifact is not imported in MANIFEST.MF" groupName="OSGi" enabledByDefault="true"
                     level="WARNING" implementationClass="org.jetbrains.osgi.ide.codeInspection.maven.MavenArtifactIsNotImportedInspection"/>

    <facetType implementation="org.jetbrains.osgi.facet.OSGiFacetType"/>
    <!---<framework.detector implementation="org.osmorc.facet.OsmorcFrameworkDetector"/>-->

    <refactoring.elementListenerProvider implementation="org.osmorc.facet.OSGiFacetRefactoringListenerProvider"/>

    <projectConfigurable instance="org.osmorc.settings.ProjectSettingsEditor" id="reference.settings.project.osgi.project.settings"
                         displayName="OSGi"/>

    <applicationConfigurable instance="org.osmorc.settings.ApplicationSettingsEditor" id="osmorc.ide.settings" displayName="OSGi">
      <configurable instance="org.osmorc.settings.FrameworkDefinitionsEditor" id="reference.settings.project.osgi.framework.definitions"
                    displayName="Framework Definitions"/>
      <configurable instance="org.osmorc.settings.LibraryBundlingEditor" id="reference.settings.project.osgi.library.bundling"
                    displayName="Library Bundling"/>
    </applicationConfigurable>

    <codeInsight.lineMarkerProvider language="JAVA" implementationClass="org.jetbrains.osgi.ide.OSGiLineMarkerProvider"/>
    <iconLayerProvider implementation="org.jetbrains.osgi.ide.iconProvider.OSGiExportPackageIconLayerProvider"/>
    <iconLayerProvider implementation="org.jetbrains.osgi.ide.iconProvider.OSGiImportPackageIconLayerProvider"/>

    <compiler implementation="org.jetbrains.osgi.compiler.impl.ComponentAnnotationCompiler" order="before artifactsCompiler"/>
    <packaging.artifactType implementation="org.jetbrains.osgi.compiler.artifact.OSGiArtifactType"/>
    <!--Service component dom model-->
    <standardResource url="http://www.osgi.org/xmlns/scr/v1.1.0" path="/standardSchemas/scr.xsd" version="1.1.0"/>
    <standardResource url="http://www.osgi.org/xmlns/metatype/v1.0.0" path="/standardSchemas/metatype.xsd" version="1.0.0"/>
    <dom.fileDescription implementation="org.jetbrains.osgi.serviceComponent.ServiceComponentDomFileDescription"/>
    <localInspection shortName="ServiceComponentInspection"
                     implementationClass="org.jetbrains.osgi.ide.codeInspection.ServiceComponentResolveInspection" enabledByDefault="true"
                     displayName="Component Problems" groupName="OSGi" level="ERROR"/>
  </extensions>
</idea-plugin>